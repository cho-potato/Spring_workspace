<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!--
		개발자가 핸들러 매핑을 등록하지 않으면 디폴트 핸들러 매핑이 적용되는데,
		DefaultAnnotationHandlerMapping ?
		xml 설정 파일을 간소화하기 위해 더 이상 빈들의 매핑을 xm에서 하기 보다
		Java5부터 지원하는 어노테이션(@) 기반으로 매핑을 처리하는 방식
		어노테이션 : 프로그램에 사용되는 주석(@)
	 -->
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<beans:bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSizePerFile" value="31457282"></beans:property>
		<!-- XML은 계산능력이 없기 때문에 크기를 계산해서 넣어줘야 한다 -->
	</beans:bean>
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<!-- 정적자원(http, css, js, image) 등을 컨트롤러 매핑에 의하지 않고 단순 링크만으로도 접근가능하게 하기  -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/"/>

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
	<!-- @가 붙은, 즉 스프링 컴포넌트의 대상이 되는 객체는 전부 찾아서 인스턴스 생성해준다 -->
	<context:component-scan base-package="com.edu.mvc3.controller" />
</beans:beans>
